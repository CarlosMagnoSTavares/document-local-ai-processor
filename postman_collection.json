{
  "info": {
    "_postman_id": "myelin-ocr-llm-collection-2024",
    "name": "üß† Document OCR LLM API - Complete Collection v1.3",
    "description": "Collection completa da API para an√°lise de documentos com OCR e modelos de linguagem locais (Ollama) e em nuvem (Google Gemini)\n\nüìã **Ordem de Execu√ß√£o:**\n1. Status & Info\n2. Model Management (Ollama + Gemini)\n3. Smart Upload (Auto-Detection)\n4. Monitor Processing\n5. Get Results\n6. Compute Configuration\n7. Error Testing\n\nüîë **API Key:** myelin-ocr-llm-2024-super-secret-key\nüåü **Gemini API Key:** Obtenha em https://aistudio.google.com/app/apikey\n\nüÜï **Novidades v1.3:**\n- ‚úÖ üåü Google Gemini API - Suporte completo\n- ‚úÖ üîÄ Multi-Provider - Ollama (local) + Gemini (nuvem)\n- ‚úÖ üöÄ Modelos Avan√ßados - Gemini 2.0/2.5\n- ‚úÖ üìä Lista Din√¢mica - Modelos sempre atualizados\n- ‚úÖ üîë Seguran√ßa - Chaves API Gemini\n- ‚úÖ ‚ö° Performance - Modelos em nuvem",
    "version": "1.3.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "myelin-2024"
  },
  "item": [
    {
      "name": "üìä 1. Status & Information",
      "description": "Endpoints para verificar status da API e obter informa√ß√µes",
      "item": [
        {
          "name": "Health Check ‚úÖ",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Verifica se a API est√° funcionando corretamente.\n\n**Quando usar:** Primeiro teste a fazer\n**Resposta esperada:** Status healthy"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/health",
                  "host": ["{{base_url}}"],
                  "path": ["health"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": \"healthy\",\n    \"message\": \"Document OCR LLM API is running\"\n}"
            }
          ]
        },
        {
          "name": "API Information üìñ",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            },
            "description": "Obt√©m informa√ß√µes sobre a API, endpoints e headers necess√°rios.\n\n**Quando usar:** Para conhecer a API\n**Resposta:** Documenta√ß√£o dos endpoints"
          },
          "response": [
            {
              "name": "API Info Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/",
                  "host": ["{{base_url}}"],
                  "path": [""]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"message\": \"Document OCR LLM API\",\n    \"version\": \"1.0.0\",\n    \"endpoints\": {\n        \"POST /upload\": \"Upload document for processing\",\n        \"GET /queue\": \"Get processing queue status\",\n        \"GET /response/{id}\": \"Get document response\",\n        \"GET /health\": \"Health check\"\n    },\n    \"required_headers\": {\n        \"Key\": \"API authentication key\",\n        \"Prompt\": \"Question about the document\",\n        \"Format-Response\": \"Expected response format\",\n        \"Model\": \"Ollama model name\",\n        \"Example\": \"Optional response example\"\n    }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "ü§ñ 2. Model Management",
      "description": "üåü NOVO - Gerenciamento de modelos para Ollama e Gemini",
      "item": [
        {
          "name": "üè† Ollama Models",
          "description": "Gerenciamento de modelos locais Ollama",
          "item": [
            {
              "name": "List Ollama Models üìã",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 200) {",
                      "    const response = pm.response.json();",
                      "    if (response.models && response.models.length > 0) {",
                      "        // Automaticamente define o primeiro modelo como padr√£o",
                      "        pm.collectionVariables.set('ollama_model', response.models[0].name);",
                      "        console.log('‚úÖ Ollama models loaded successfully!');",
                      "        console.log('ü§ñ Default model set to:', response.models[0].name);",
                      "        console.log('üìä Total models:', response.models.length);",
                      "    }",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Key",
                    "value": "{{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/models/list",
                  "host": ["{{base_url}}"],
                  "path": ["models", "list"]
                },
                "description": "Lista todos os modelos Ollama dispon√≠veis no sistema local.\n\n**Resposta:** Lista de modelos instalados\n**Auto-config:** Define automaticamente o primeiro modelo como padr√£o"
              }
            },
            {
              "name": "Download Ollama Model üì•",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Key",
                    "value": "{{api_key}}",
                    "type": "text"
                  },
                  {
                    "key": "Model-Name",
                    "value": "qwen2:0.5b",
                    "type": "text",
                    "description": "üéØ Modelo a baixar (exemplo: qwen2:0.5b, llama3:8b)"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/models/download",
                  "host": ["{{base_url}}"],
                  "path": ["models", "download"]
                },
                "description": "Baixa um novo modelo Ollama.\n\n**Modelos populares:**\n- qwen2:0.5b (ultracompacto)\n- gemma3:1b (padr√£o)\n- llama3:8b (avan√ßado)\n- mistral:7b (vers√°til)\n\n‚ö†Ô∏è **Tempo:** 5-30 minutos dependendo do modelo"
              }
            }
          ]
        },
        {
          "name": "üåü Gemini Models",
          "description": "Gerenciamento de modelos Google Gemini",
          "item": [
            {
              "name": "List Gemini Models üìã",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 200) {",
                      "    const response = pm.response.json();",
                      "    if (response.models && response.models.length > 0) {",
                      "        // Automaticamente define o modelo recomendado",
                      "        const recommendedModel = response.models.find(m => m.name === 'gemini-2.0-flash') || response.models[0];",
                      "        pm.collectionVariables.set('gemini_model', recommendedModel.name);",
                      "        console.log('‚úÖ Gemini models loaded successfully!');",
                      "        console.log('üåü Recommended model set to:', recommendedModel.name);",
                      "        console.log('üìä Total models:', response.models.length);",
                      "        ",
                      "        // Lista todos os modelos dispon√≠veis",
                      "        response.models.forEach(model => {",
                      "            console.log(`ü§ñ ${model.name}: ${model.description}`);",
                      "        });",
                      "    }",
                      "} else {",
                      "    console.log('‚ùå Failed to load Gemini models. Check API key.');",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Key",
                    "value": "{{api_key}}",
                    "type": "text"
                  },
                  {
                    "key": "Gemini-API-Key",
                    "value": "{{gemini_api_key}}",
                    "type": "text",
                    "description": "üîë Sua chave API do Google Gemini"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/models/gemini",
                  "host": ["{{base_url}}"],
                  "path": ["models", "gemini"]
                },
                "description": "üåü NOVO - Lista todos os modelos Google Gemini dispon√≠veis dinamicamente.\n\n**Modelos atuais:**\n- gemini-2.0-flash (recomendado)\n- gemini-2.5-pro-preview (mais avan√ßado)\n- gemini-1.5-pro (complexo)\n- gemini-1.5-flash (r√°pido)\n\n**Auto-config:** Define automaticamente o modelo recomendado\n**Din√¢mico:** Sempre atualizado com novos modelos Google"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üì§ 3. Smart Upload (Multi-Provider)",
      "description": "üöÄ UPLOAD INTELIGENTE com suporte a Ollama (local) e Gemini (nuvem)",
      "item": [
        {
          "name": "üè† Ollama (Local)",
          "description": "Upload usando modelos locais Ollama",
          "item": [
            {
              "name": "Smart Upload - Ollama Image üñºÔ∏è",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 200) {",
                      "    const response = pm.response.json();",
                      "    if (response.document_id) {",
                      "        pm.collectionVariables.set('document_id', response.document_id);",
                      "        pm.collectionVariables.set('last_uploaded_filename', response.filename);",
                      "        pm.collectionVariables.set('last_ai_provider', response.ai_provider);",
                      "        console.log('‚úÖ Document uploaded successfully with Ollama!');",
                      "        console.log('üìÑ Document ID:', response.document_id);",
                      "        console.log('üìÅ Filename:', response.filename);",
                      "        console.log('üè† AI Provider:', response.ai_provider);",
                      "        console.log('ü§ñ Model:', response.model);",
                      "    }",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Key",
                    "value": "{{api_key}}",
                    "type": "text"
                  },
                  {
                    "key": "Prompt",
                    "value": "Verifique qual CNPJ existe nesse documento e extraia todas as informa√ß√µes da empresa",
                    "type": "text"
                  },
                  {
                    "key": "Format-Response",
                    "value": "[{\"CNPJ\": \"\", \"empresa\": \"\", \"endereco\": \"\"}]",
                    "type": "text"
                  },
                  {
                    "key": "Model",
                    "value": "{{ollama_model}}",
                    "type": "text",
                    "description": "ü§ñ Modelo Ollama (auto-configurado)"
                  },
                  {
                    "key": "AI-Provider",
                    "value": "ollama",
                    "type": "text",
                    "description": "üè† Usando Ollama (local)"
                  },
                  {
                    "key": "Example",
                    "value": "[{\"CNPJ\": \"12.345.678/0001-90\", \"empresa\": \"Empresa Exemplo LTDA\", \"endereco\": \"Rua das Flores, 123\"}]",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "type": "file",
                      "src": []
                    }
                  ]
                },
                "url": {
                  "raw": "{{base_url}}/upload",
                  "host": ["{{base_url}}"],
                  "path": ["upload"]
                },
                "description": "üè† Upload usando Ollama (local) para imagens.\n\n**Provider:** ollama (local)\n**Auto-detec√ß√£o:** JPG, PNG ‚Üí Tesseract OCR\n**Vantagens:** Privacidade total, sem custos\n**Requisitos:** Hardware local adequado"
              }
            }
          ]
        },
        {
          "name": "üåü Gemini (Cloud)",
          "description": "Upload usando Google Gemini (nuvem)",
          "item": [
            {
              "name": "Smart Upload - Gemini PDF üìÑ",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 200) {",
                      "    const response = pm.response.json();",
                      "    if (response.document_id) {",
                      "        pm.collectionVariables.set('document_id', response.document_id);",
                      "        pm.collectionVariables.set('last_uploaded_filename', response.filename);",
                      "        pm.collectionVariables.set('last_ai_provider', response.ai_provider);",
                      "        console.log('‚úÖ Document uploaded successfully with Gemini!');",
                      "        console.log('üìÑ Document ID:', response.document_id);",
                      "        console.log('üìÅ Filename:', response.filename);",
                      "        console.log('üåü AI Provider:', response.ai_provider);",
                      "        console.log('ü§ñ Model:', response.model);",
                      "    }",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Key",
                    "value": "{{api_key}}",
                    "type": "text"
                  },
                  {
                    "key": "Prompt",
                    "value": "Verifique qual CNPJ existe nesse documento e extraia todas as informa√ß√µes da empresa",
                    "type": "text"
                  },
                  {
                    "key": "Format-Response",
                    "value": "[{\"Dia da Leitura\": \"\"}]",
                    "type": "text"
                  },
                  {
                    "key": "Model",
                    "value": "{{gemini_model}}",
                    "type": "text",
                    "description": "üåü Modelo Gemini (auto-configurado)"
                  },
                  {
                    "key": "AI-Provider",
                    "value": "gemini",
                    "type": "text",
                    "description": "üåü Usando Google Gemini (nuvem)"
                  },
                  {
                    "key": "Gemini-API-Key",
                    "value": "{{gemini_api_key}}",
                    "type": "text",
                    "description": "üîë Chave API Gemini"
                  },
                  {
                    "key": "Example",
                    "value": "[{\"Dia da Leitura\": \"31/12/9999\"}]",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "type": "file",
                      "src": []
                    }
                  ]
                },
                "url": {
                  "raw": "{{base_url}}/upload",
                  "host": ["{{base_url}}"],
                  "path": ["upload"]
                },
                "description": "üåü Upload usando Google Gemini (nuvem) para PDFs.\n\n**Provider:** gemini (nuvem)\n**Auto-detec√ß√£o:** PDF ‚Üí PyPDF2 Parser\n**Vantagens:** Modelos avan√ßados, sem requisitos de hardware\n**Requisitos:** Chave API Gemini"
              }
            },
            {
              "name": "Smart Upload - Gemini Advanced (2.5 Pro) üöÄ",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Key",
                    "value": "{{api_key}}",
                    "type": "text"
                  },
                  {
                    "key": "Prompt",
                    "value": "Analise este documento de forma detalhada e extraia todas as informa√ß√µes relevantes com racioc√≠nio completo",
                    "type": "text"
                  },
                  {
                    "key": "Format-Response",
                    "value": "[{\"tipo_documento\": \"\", \"analise_detalhada\": \"\", \"informacoes_extraidas\": \"\", \"confianca\": \"\"}]",
                    "type": "text"
                  },
                  {
                    "key": "Model",
                    "value": "gemini-2.5-pro-preview",
                    "type": "text",
                    "description": "üöÄ Modelo mais avan√ßado do Gemini"
                  },
                  {
                    "key": "AI-Provider",
                    "value": "gemini",
                    "type": "text"
                  },
                  {
                    "key": "Gemini-API-Key",
                    "value": "{{gemini_api_key}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "type": "file",
                      "src": []
                    }
                  ]
                },
                "url": {
                  "raw": "{{base_url}}/upload",
                  "host": ["{{base_url}}"],
                  "path": ["upload"]
                },
                "description": "üöÄ Upload usando o modelo mais avan√ßado Gemini 2.5 Pro.\n\n**Modelo:** gemini-2.5-pro-preview\n**Capacidades:** Racioc√≠nio avan√ßado, an√°lise complexa\n**Quando usar:** Documentos complexos que requerem an√°lise profunda"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìã 4. Monitor Processing",
      "description": "Monitoramento do processamento dos documentos",
      "item": [
        {
          "name": "Get Queue Status üìä",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Key",
                "value": "{{api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/queue",
              "host": ["{{base_url}}"],
              "path": ["queue"]
            },
            "description": "Obt√©m o status de todos os documentos na fila.\n\n**Status poss√≠veis:**\n- uploaded: Arquivo recebido\n- text_extracted: Texto extra√≠do\n- prompt_processed: IA processou\n- completed: Finalizado\n- error: Erro no processamento"
          }
        }
      ]
    },
    {
      "name": "üìÑ 5. Get Results",
      "description": "Obten√ß√£o dos resultados processados",
      "item": [
        {
          "name": "Get Document Response üìÑ",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Key",
                "value": "{{api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/response/{{document_id}}",
              "host": ["{{base_url}}"],
              "path": ["response", "{{document_id}}"]
            },
            "description": "Obt√©m a resposta processada de um documento espec√≠fico.\n\n**Vari√°vel:** document_id (auto-configurada ap√≥s upload)\n**Resposta:** Inclui texto extra√≠do, resposta da IA e resposta formatada"
          }
        }
      ]
    },
    {
      "name": "‚öôÔ∏è 6. Compute Configuration",
      "description": "Configura√ß√£o de CPU/GPU para Ollama",
      "item": [
        {
          "name": "Get Current Compute Mode üîç",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Key",
                "value": "{{api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/config/compute",
              "host": ["{{base_url}}"],
              "path": ["config", "compute"]
            },
            "description": "Verifica o modo de computa√ß√£o atual do Ollama (CPU ou GPU)."
          }
        },
        {
          "name": "Set GPU Mode üöÄ",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Key",
                "value": "{{api_key}}",
                "type": "text"
              },
              {
                "key": "Compute-Mode",
                "value": "gpu",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/config/compute",
              "host": ["{{base_url}}"],
              "path": ["config", "compute"]
            },
            "description": "Configura Ollama para usar GPU (melhor performance)."
          }
        },
        {
          "name": "Set CPU Mode üíª",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Key",
                "value": "{{api_key}}",
                "type": "text"
              },
              {
                "key": "Compute-Mode",
                "value": "cpu",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/config/compute",
              "host": ["{{base_url}}"],
              "path": ["config", "compute"]
            },
            "description": "Configura Ollama para usar CPU (modo econ√¥mico)."
          }
        }
      ]
    },
    {
      "name": "‚ùå 7. Error Testing",
      "description": "Testes de cen√°rios de erro para valida√ß√£o",
      "item": [
        {
          "name": "Invalid API Key ‚ùå",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Key",
                "value": "invalid-key",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/queue",
              "host": ["{{base_url}}"],
              "path": ["queue"]
            },
            "description": "Testa resposta com chave API inv√°lida.\n\n**Esperado:** HTTP 401 Unauthorized"
          }
        },
        {
          "name": "Missing Gemini API Key ‚ùå",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Key",
                "value": "{{api_key}}",
                "type": "text"
              },
              {
                "key": "Prompt",
                "value": "Test prompt",
                "type": "text"
              },
              {
                "key": "Format-Response",
                "value": "{}",
                "type": "text"
              },
              {
                "key": "Model",
                "value": "gemini-2.0-flash",
                "type": "text"
              },
              {
                "key": "AI-Provider",
                "value": "gemini",
                "type": "text"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/upload",
              "host": ["{{base_url}}"],
              "path": ["upload"]
            },
            "description": "Testa upload com Gemini sem fornecer API key.\n\n**Esperado:** HTTP 400 - Gemini-API-Key required"
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "api_key",
      "value": "myelin-ocr-llm-2024-super-secret-key",
      "type": "string"
    },
    {
      "key": "gemini_api_key",
      "value": "YOUR_GEMINI_API_KEY_HERE",
      "type": "string",
      "description": "üîë Substitua pela sua chave API do Google Gemini"
    },
    {
      "key": "document_id",
      "value": "",
      "type": "string",
      "description": "üìÑ Auto-configurado ap√≥s upload"
    },
    {
      "key": "last_uploaded_filename",
      "value": "",
      "type": "string"
    },
    {
      "key": "last_ai_provider",
      "value": "",
      "type": "string"
    },
    {
      "key": "ollama_model",
      "value": "gemma3:1b",
      "type": "string",
      "description": "üè† Modelo Ollama (auto-configurado)"
    },
    {
      "key": "gemini_model",
      "value": "gemini-2.0-flash",
      "type": "string",
      "description": "üåü Modelo Gemini (auto-configurado)"
    }
  ]
} 